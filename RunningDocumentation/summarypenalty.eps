%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.4.0.287 (R2007a). Operating System: Linux 2.6.25.20-0.1-default #1 SMP 2008-12-12 20:30:38 +0100 x86_64.
%%Title: /home/mbensalah/Documents/ResearchParLab/BluePrints/MeetingsWithPapadopoulos/summarypenalty.eps
%%CreationDate: 03/06/2009  11:03:14
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    68   218   542   574
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    68   218   542   574
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0816 6888 csm

    0     0  5697  4269 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5698 4270 rf
6 w
0 3480 4415 0 0 -3480 741 3799 4 MP
PP
-4415 0 0 3480 4415 0 0 -3480 741 3799 5 MP stroke
4 w
DO
SO
6 w
0 sg
 741 3799 mt 5156 3799 L
 741  319 mt 5156  319 L
 741 3799 mt  741  319 L
5156 3799 mt 5156  319 L
 741 3799 mt 5156 3799 L
 741 3799 mt  741  319 L
 741 3799 mt  741 3754 L
 741  319 mt  741  364 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 708 3944 mt 
(0) s
1182 3799 mt 1182 3754 L
1182  319 mt 1182  364 L
1149 3944 mt 
(1) s
1624 3799 mt 1624 3754 L
1624  319 mt 1624  364 L
1591 3944 mt 
(2) s
2065 3799 mt 2065 3754 L
2065  319 mt 2065  364 L
2032 3944 mt 
(3) s
2507 3799 mt 2507 3754 L
2507  319 mt 2507  364 L
2474 3944 mt 
(4) s
2948 3799 mt 2948 3754 L
2948  319 mt 2948  364 L
2915 3944 mt 
(5) s
3390 3799 mt 3390 3754 L
3390  319 mt 3390  364 L
3357 3944 mt 
(6) s
3831 3799 mt 3831 3754 L
3831  319 mt 3831  364 L
3798 3944 mt 
(7) s
4273 3799 mt 4273 3754 L
4273  319 mt 4273  364 L
4240 3944 mt 
(8) s
4714 3799 mt 4714 3754 L
4714  319 mt 4714  364 L
4681 3944 mt 
(9) s
5156 3799 mt 5156 3754 L
5156  319 mt 5156  364 L
5090 3944 mt 
(10) s
 741 3799 mt  785 3799 L
5156 3799 mt 5111 3799 L
 470 3843 mt 
(-1.4) s
 741 3412 mt  785 3412 L
5156 3412 mt 5111 3412 L
 470 3456 mt 
(-1.2) s
 741 3025 mt  785 3025 L
5156 3025 mt 5111 3025 L
 570 3069 mt 
(-1) s
 741 2639 mt  785 2639 L
5156 2639 mt 5111 2639 L
 470 2683 mt 
(-0.8) s
 741 2252 mt  785 2252 L
5156 2252 mt 5111 2252 L
 470 2296 mt 
(-0.6) s
 741 1866 mt  785 1866 L
5156 1866 mt 5111 1866 L
 470 1910 mt 
(-0.4) s
 741 1479 mt  785 1479 L
5156 1479 mt 5111 1479 L
 470 1523 mt 
(-0.2) s
 741 1093 mt  785 1093 L
5156 1093 mt 5111 1093 L
 640 1137 mt 
(0) s
 741  706 mt  785  706 L
5156  706 mt 5111  706 L
 540  750 mt 
(0.2) s
 741  319 mt  785  319 L
5156  319 mt 5111  319 L
 540  363 mt 
(0.4) s
 741 3799 mt 5156 3799 L
 741  319 mt 5156  319 L
 741 3799 mt  741  319 L
5156 3799 mt 5156  319 L
gs 741 320 4416 3480 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
-710 3112 -306 -1082 -1017 -631 -1016 -53 -1017 -5 4807 2431 6 MP stroke
gr

c8
4771 2431 mt 4843 2431 L
4807 2395 mt 4807 2467 L
3754 2426 mt 3826 2426 L
3790 2390 mt 3790 2462 L
2738 2373 mt 2810 2373 L
2774 2337 mt 2774 2409 L
1721 1742 mt 1793 1742 L
1757 1706 mt 1757 1778 L
1415  660 mt 1487  660 L
1451  624 mt 1451  696 L
 705 3772 mt  777 3772 L
 741 3736 mt  741 3808 L
gs 741 320 4416 3480 rc
gr

0 sg
2347 4087 mt 
(log\(penalty coefficient\)) s
 388 2517 mt  -90 rotate
(log\(tip deflection\)) s
90 rotate
1761  225 mt 
(Cut Cell Different Penalty parameter N=1000) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
